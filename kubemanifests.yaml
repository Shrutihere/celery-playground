apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: flower
      name: flower
    spec:
      ports:
        - name: "5555"
          port: 5555
          targetPort: 5555
      selector:
        io.kompose.service: flower
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
      name: rabbitmq
    spec:
      ports:
        - name: "5672"
          port: 5672
          targetPort: 5672
      selector:
        io.kompose.service: rabbitmq
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 5000
      selector:
        io.kompose.service: web
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: celery-worker
      name: celery-worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: celery-worker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: celery-worker
        spec:
          containers:
            - args:
                - /start-celeryworker
              env:
                - name: CELERY_BROKER_URL
                  valueFrom:
                    configMapKeyRef:
                      key: CELERY_BROKER_URL
                      name: env--dev-sample
                - name: FASTAPI_CONFIG
                  valueFrom:
                    configMapKeyRef:
                      key: FASTAPI_CONFIG
                      name: env--dev-sample
              image: fastapi_celery_example_celery_worker
              imagePullPolicy: Never
              name: celery-worker
              resources: {}
          restartPolicy: Always
          volumes:
            - name: celery-worker-claim0
              persistentVolumeClaim:
                claimName: celery-worker-claim0
    status: {}
  - apiVersion: v1
    data:
      CELERY_BROKER_URL: pyamqp://guest@rabbitmq//
      FASTAPI_CONFIG: development
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: celery-worker-env--dev-sample
      name: env--dev-sample
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: celery-worker-claim0
      name: celery-worker-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: flower
      name: flower
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: flower
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: flower
        spec:
          containers:
            - args:
                - /start-flower
              env:
                - name: CELERY_BROKER_URL
                  value: pyamqp://guest@rabbitmq//
                - name: FLOWER_PORT
                  value: "5555"
              image: mher/flower:0.9.5
              name: flower
              ports:
                - containerPort: 5555
              resources: {}
          restartPolicy: Always
          volumes:
            - name: flower-claim0
              persistentVolumeClaim:
                claimName: flower-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: flower-claim0
      name: flower-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
      name: rabbitmq
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: rabbitmq
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: rabbitmq
        spec:
          containers:
            - image: rabbitmq
              name: rabbitmq
              ports:
                - containerPort: 5672
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Users\SHRUTI\OneDrive\Desktop\Edvora\Task_scheduler\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: web
        spec:
          containers:
            - args:
                - /start
              env:
                - name: CELERY_BROKER_URL
                  valueFrom:
                    configMapKeyRef:
                      key: CELERY_BROKER_URL
                      name: env--dev-sample
                - name: FASTAPI_CONFIG
                  valueFrom:
                    configMapKeyRef:
                      key: FASTAPI_CONFIG
                      name: env--dev-sample
              image: fastapi_celery_example_web
              imagePullPolicy: Never
              name: web
              ports:
                - containerPort: 5000
              resources: {}
          restartPolicy: Always
          volumes:
            - name: web-claim0
              persistentVolumeClaim:
                claimName: web-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-claim0
      name: web-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

